<!DOCTYPE html>
<html>
<head>
    <title>Registration</title>
    <style>
        .error { color: red; }
        .success { color: green; }
        div { margin: 10px 0; }
    </style>
</head>
<body>
    <form id="registrationForm" novalidate>
        <div>
            <label for="username">Username:</label><br>
            <input type="text" id="username" name="username">
            <div id="usernameError" class="error"></div>
        </div>

        <div>
            <label for="email">Email:</label><br>
            <input type="email" id="email" name="email">
            <div id="emailError" class="error"></div>
        </div>

        <div>
            <label for="password">Password:</label><br>
            <input type="password" id="password" name="password">
            <div id="passwordError" class="error"></div>
        </div>

        <div class="form-group">
            <label for="confirmPassword">Confirm Password:</label><br>
            <input type="password" id="confirmPassword" name="confirmPassword">
            <div id="confirmPasswordError" class="error"></div>
        </div>

        <input type="submit" value="Register">
        <div id="formMessage" class="success" role="status" aria-live="polite"></div>
    </form>

    <script>
        const form = document.getElementById('registrationForm');
        const fields = {
            username: document.getElementById('username'),
            email: document.getElementById('email'),
            password: document.getElementById('password'),
            confirmPassword: document.getElementById('confirmPassword'),
        };

        function showError(id, message) {
            document.getElementById(id + 'Error').textContent = message || '';
        }

        function showFormMessage(message) {
            document.getElementById('formMessage').textContent = message || '';
        }

        function validateUsername() {
            const v = fields.username.value.trim();
            if (v.length < 3) {
                showError('username', 'Username must be at least 3 characters long');
                return false;
            }
            showError('username', '');
            return true;
        }

        function validateEmail() {
            const v = fields.email.value.trim();
            const pattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!pattern.test(v)) {
                showError('email', 'Please enter a valid email address');
                return false;
            }
            showError('email', '');
            return true;
        }

        function validatePassword() {
            const v = fields.password.value;
            if (v.length < 6) {
                showError('password', 'Password must be at least 6 characters long');
                return false;
            }
            showError('password', '');
            return true;
        }

        function validateConfirmPassword() {
            if (fields.password.value !== fields.confirmPassword.value) {
                showError('confirmPassword', 'Passwords do not match');
                return false;
            }
            showError('confirmPassword', '');
            return true;
        }

        function validateForm() {
            const v1 = validateUsername();
            const v2 = validateEmail();
            const v3 = validatePassword();
            const v4 = validateConfirmPassword();
            return v1 && v2 && v3 && v4;
        }

        // Live validation
        fields.username.addEventListener('input', validateUsername);
        fields.email.addEventListener('input', validateEmail);
        fields.password.addEventListener('input', () => {
            validatePassword();
            validateConfirmPassword();
        });
        fields.confirmPassword.addEventListener('input', validateConfirmPassword);

        // Submit handler: show success message when valid
        form.addEventListener('submit', function (e) {
            e.preventDefault(); // prevent actual navigation so we can show message
            showFormMessage(''); // clear previous form message
            if (!validateForm()) {
                // keep focus on first invalid field
                if (!validateUsername()) { fields.username.focus(); return; }
                if (!validateEmail()) { fields.email.focus(); return; }
                if (!validatePassword()) { fields.password.focus(); return; }
                if (!validateConfirmPassword()) { fields.confirmPassword.focus(); return; }
                return;
            }

            // Form is valid â€” show success, reset fields and clear errors
            showFormMessage('Registration successful.');
            ['username','email','password','confirmPassword'].forEach(id => showError(id, ''));
            form.reset();
            fields.username.focus();
        });
    </script>
</body>
</html>
